#include "pedido-articulo.hpp"

ostream& operator<<(ostream& os, const LineaPedido& l)
{
  os << setw(2) << l.precio_venta() << " €\t"
     << l.cantidad();
}

void Pedido_Articulo::
pedir(const Pedido& p, const Articulo& a, double pvp, int c)
{
  LineaPedido lp(pvp,c);

  pedart_[&p].emplace(&a, lp);
  artped_[&a].emplace(&p, lp);
}


ostream& operator <<(ostream& os, Pedido_Articulo::ItemsPedido cos)
{
  //Mas adelante
}
  
ostream& operator <<(ostream& os, Pedido_Articulo::Pedidos const& p)
{
  //Mas adelante

  double importeTotal = 0;

    for (auto const& par : p)
    {
        const Pedido& ped = *par.first;
        const LineaPedido& linea = par.second;

        os << ped.total() << " € " << linea.cantidad() << ' '
           << ped.fecha() << endl;

        importeTotal += linea.precio_venta() * linea.cantidad();
    }

    return os << endl << "Importe total: " << fixed
              << setprecision(2) << importeTotal << " €" << endl;

}

void Pedido_Articulo:: mostrarDetallePedidos(ostream& os) const
{
  double total{0};
  
  for(auto const& pair : pedart_)
  {
    os << "Pedido núm. " << pair.first->numero() << '\n'
       << "Cliente: " << pair.first->tarjeta()->titular()->id()
       << "\t Fecha: " << pair.first->fecha() << '\n'
       << pair.second << '\n';

    total += pair.first->total();
  }
  
  os << "\n TOTAL VENTAS: " << setprecision(2) << fixed << total;
}


void Pedido_Articulo::mostrarVentasArticulos(ostream& os) const
{
  for(auto const& pair: artped_)
  {
    os << "Ventas de " << pair.first->referencia() <<
       << ' ' << pair.first->titulo() << '\n'
       << pair.second;
  }
}
